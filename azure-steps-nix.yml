  

steps:

  - bash: |
      OS_X_VER=$(sw_vers 2>/dev/null | grep BuildVer | awk '{print $2}' | cut -c1-2 || true); OS_X_VER=$((OS_X_VER-4)); [ "$OS_X_VER" -gt 0 ] || unset OS_X_VER

      commits_count=$(git log -n 999999 --date=raw --pretty=format:"%cd" | wc -l)
      echo "OS is ........................ [$OS]"
      echo "BUILD_SOURCESDIRECTORY is .... [$BUILD_SOURCESDIRECTORY]"
      echo "AGENT_BUILDDIRECTORY ......... [$AGENT_BUILDDIRECTORY]"
      echo "build number is .............. [$commits_count]"
      echo "working folder ............... [$(pwd)]"
      echo "message ...................... [$BUILD_SOURCEVERSIONMESSAGE]"
      echo "OS_X_VER ..................... [$OS_X_VER]"
      echo "uname's System ............... [$(uname -s)]"

      echo "##vso[task.setvariable variable=OS_X_VER]$OS_X_VER"
    displayName: 'INIT/MAIN [$(OS)]'

  - powershell: |
      $ErrorActionPreference = "Continue"
      & uname -a
      & df -h
      & diskutil list
      & sudo fdisk -l

      gdr -PSProvider 'FileSystem'
      & cmd /c "set | sort"
      & printenv | sort
      ""

      "env:psmodulePath is '$($env:psmodulePath)'"

      echo "OK?!"
      exit 0
    displayName: 'Show [$(OS)] Info'

  - bash: |
      msbuild /version; echo ""
      dotnet build /version; echo ""
      nuget >.1.tmp; cat .1.tmp | head -3
      mono --version
      dotnet --info
      curl --version

      exit 0
    displayName: 'Show .NET for [$(OS)]'
